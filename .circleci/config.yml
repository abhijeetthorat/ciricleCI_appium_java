# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: circleci/node
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/ciricleCI_appium_java

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      ANDROID_HOME: /usr/local/android-sdk-linux
    
    steps:
      - checkout

      # Download and cache dependencies

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - run:
          name: Install appiums server
          command: |
                 curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
                 sudo apt-get install -y nodejs
                 sudo apt-get install -y build-essential
                 sudo apt-get install build-essential curl git m4 python-setuptools ruby texinfo libbz2-dev libcurl4-openssl-dev libexpat-dev libncurses-dev zlib1g-dev
      - run:
          name: Install appium server
          command: |
            sudo npm update
            sudo npm install node
            sudo npm install appium
            sudo npm install wd
            sudo npm install -g appium-doctor
            appium &
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
            
      # run tests!
      - run:   /usr/bin/appium &       
               mvn test

      - store_artifacts:
          path: target/surefire-reports
          destination: tr1
      - store_test_results:
          path: target/surefire-reports


